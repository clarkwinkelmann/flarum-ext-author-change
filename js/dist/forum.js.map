{"version":3,"sources":["webpack://@clarkwinkelmann/author-change/webpack/bootstrap","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['common/models/Discussion']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['common/models/Post']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['forum/utils/PostControls']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['common/components/Modal']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['common/helpers/avatar']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['common/helpers/username']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['forum/states/SearchState']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['common/components/Switch']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['forum/components/Search']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['common/utils/ItemList']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/author-change/external \"flarum.core.compat['forum/components/UsersSearchSource']\"","webpack://@clarkwinkelmann/author-change/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@clarkwinkelmann/author-change/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/author-change/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/author-change/./src/forum/components/UsersSearchSourceWithoutInternalRouting.ts","webpack://@clarkwinkelmann/author-change/./src/forum/components/UserSearch.ts","webpack://@clarkwinkelmann/author-change/./src/forum/components/UpdateAuthorModal.ts","webpack://@clarkwinkelmann/author-change/./src/forum/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_extends","assign","target","arguments","length","source","apply","this","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","UsersSearchSourceWithoutInternalRouting","view","query","resultItems","filter","entry","attrs","className","indexOf","Button","component","icon","app","translator","trans","forEach","result","Array","isArray","children","tag","push","UsersSearchSource","UserSearch","selectUserElement","searchResultElement","index","dataset","userId","split","user","store","getById","onsubmit","oncreate","vnode","$","on","event","$userSearchResult","parents","preventDefault","selectResult","clearTimeout","searchTimeout","loadingSources","state","getValue","getItem","clear","trigger","redraw","sourceItems","items","ItemList","forum","attribute","add","placeholder","extractText","Search","UpdateAuthorModal","createdAt","editedAt","syncFirstPost","otherModelForFirstPostSync","attributes","dirty","loading","userSearchState","oninit","related","Post","toISOString","slice","SearchState","getInitialSearch","showFirstPostSync","Discussion","firstPost","all","find","post","number","discussion","isPost","title","content","onclick","relationships","avatar","username","onchange","disabled","Switch","type","modal","close","saveModel","model","save","e","then","Promise","resolve","err","Modal","initializers","extend","DiscussionControls","show","PostControls"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,c,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,eCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,mC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uC,+GCArB,SAASC,IAetB,OAdAA,EAAWzB,OAAO0B,QAAU,SAAUC,GACpC,IAAK,IAAIrC,EAAI,EAAGA,EAAIsC,UAAUC,OAAQvC,IAAK,CACzC,IAAIwC,EAASF,UAAUtC,GAEvB,IAAK,IAAIuB,KAAOiB,EACV9B,OAAOkB,UAAUC,eAAe1B,KAAKqC,EAAQjB,KAC/Cc,EAAOd,GAAOiB,EAAOjB,IAK3B,OAAOc,IAGOI,MAAMC,KAAMJ,WCff,SAASK,EAAgBlC,EAAGqB,GAMzC,OALAa,EAAkBjC,OAAOkC,gBAAkB,SAAyBnC,EAAGqB,GAErE,OADArB,EAAEoC,UAAYf,EACPrB,IAGcA,EAAGqB,GCLb,SAASgB,EAAeC,EAAUC,GAC/CD,EAASnB,UAAYlB,OAAOY,OAAO0B,EAAWpB,WAC9CmB,EAASnB,UAAUqB,YAAcF,EACjCH,EAAeG,EAAUC,G,kLCCNE,E,wFACjBC,KAAA,SAAKC,GACD,IAAMD,EAAO,EAAH,UAASA,KAAT,UAAcC,GAOlBC,EAAcF,EAAKG,QAAO,SAAAC,GAC5B,OAAOA,EAAMC,OAASD,EAAMC,MAAMC,YAAoE,IAAvDF,EAAMC,MAAMC,UAAUC,QAAQ,uBAGjF,OAA2B,IAAvBL,EAAYd,OACRa,EAAMb,OAAS,EACR,CACHnC,EAAE,KAAMuD,IAAOC,UAAU,CACrBC,KAAM,sBACPC,IAAIC,WAAWC,MAAM,2DAIzB,CACH5D,EAAE,KAAMuD,IAAOC,UAAU,CACrBC,KAAM,uBACPC,IAAIC,WAAWC,MAAM,6DAIhCX,EAAYY,SAAQ,SAACC,GACbC,MAAMC,QAAQF,EAAOG,WAAaH,EAAOG,SAAS9B,OAAS,IAG3D2B,EAAOG,SAAS,GAAGC,IAAM,QAI7BlB,EAAMb,OAAS,GACfc,EAAYkB,KAAKnE,EAAE,KAAMuD,IAAOC,UAAU,CACtCC,KAAM,sBACPC,IAAIC,WAAWC,MAAM,2DAGrBX,I,UA3CsDmB,GCOhDC,E,gGACjBC,kBAAA,SAAkBC,GACd,IAAMC,EAAQD,EAAoBE,QAAQD,MAE1C,GAAKA,EAAL,CAKA,IAAME,EAASF,EAAMG,MAAM,SAAS,GAE9BC,EAAOlB,IAAImB,MAAMC,QAAQ,QAASJ,GAExCpC,KAAKc,MAAM2B,SAASH,K,EAGxBI,SAAA,SAASC,GAA6C,WAClD,YAAMD,SAAN,UAAeC,GAEf3C,KAAK4C,EAAE,mBAAmBC,GAAG,SAAS,SAAAC,GAClC,IAAMC,EAAoBH,EAAEE,EAAMnD,QAAQqD,QAAQ,qBAE9CD,EAAkBlD,SAClBiD,EAAMG,iBAEN,EAAKjB,kBAAkBe,EAAkB5E,IAAI,S,EAKzD+E,aAAA,WACIC,aAAanD,KAAKoD,eAClBpD,KAAKqD,eAAiB,EAElBrD,KAAKsD,MAAMC,WACXvD,KAAKgC,kBAAkBhC,KAAKwD,QAAQxD,KAAKkC,OAAO/D,IAAI,IAEpD6B,KAAKyD,QAGTzD,KAAK4C,EAAE,SAASc,QAAQ,S,EAG5BD,MAAA,WACI,YAAMA,MAAN,WAEA/F,EAAEiG,U,EAGNC,YAAA,WACI,IAAMC,EAAQ,IAAIC,IAIlB,OAFI1C,IAAI2C,MAAMC,UAAU,mBAAmBH,EAAMI,IAAI,QAAS,IAAIzD,GAE3DqD,G,EAGXpD,KAAA,WACI,IAAMA,EAAO,EAAH,UAASA,KAAT,WAKV,OAFAA,EAAKkB,SAAS,GAAGA,SAAS,GAAGb,MAAMoD,YAAcC,IAAY/C,IAAIC,WAAWC,MAAM,2DAE3Eb,G,GA/DyB2D,KCOnBC,E,oJACjBvD,W,IACAwB,U,IACAgC,e,IACAC,c,IACAC,eAAyB,E,EACzBC,4BAAwD,E,EACxDC,WAAkB,G,EAClBC,OAAiB,E,EACjBC,SAAmB,E,EACnBC,qB,sCAEAC,OAAA,SAAOnC,GACH,YAAMmC,OAAN,UAAanC,GAEb,IAAOoC,EAAW/E,KAAKc,MAAhBiE,QAEDR,EAAWQ,aAAmBC,KAAQD,EAAQR,WAEpDvE,KAAKsC,KAAOyC,EAAQzC,OACpBtC,KAAKsE,UAAYS,EAAQT,YAAYW,cAAcC,MAAM,EAAG,IAC5DlF,KAAKuE,SAAWA,EAAWA,EAASU,cAAcC,MAAM,EAAG,IAAM,GACjElF,KAAK6E,gBAAkB,IAAIM,IAG3BnF,KAAK6E,gBAAgBO,iBAAmB,iBAAM,IAE1CpF,KAAKqF,sBACDN,aAAmBO,KACnBtF,KAAKyE,2BAA6BM,EAAQQ,aAIF,IAApCvF,KAAKyE,6BACLzE,KAAKyE,2BAA6BrD,IAAImB,MAAMiD,IAAI,SAASC,MAAK,SAAAC,GAC1D,OAAyB,IAAlBA,EAAKC,UAAkBD,EAAKE,eAAiBb,OAClD,IAGV/E,KAAKyE,2BAA6BM,EAAQa,aAI1C5F,KAAKyE,4BACLzE,KAAKyE,2BAA2BnC,SAAWtC,KAAKsC,MAChDtC,KAAKyE,2BAA2BH,YAAYW,cAAcC,MAAM,EAAG,MAAQlF,KAAKsE,YAEhFtE,KAAKwE,eAAgB,K,EAKjCa,kBAAA,WACI,OAAQrF,KAAKc,MAAMiE,mBAAmBO,KAA+C,IAAhCtF,KAAKc,MAAMiE,QAAQY,U,EAG5EE,OAAA,WACI,OAAO7F,KAAKc,MAAMiE,mBAAmBC,K,EAGzCjE,UAAA,WACI,MAAO,uB,EAGX+E,MAAA,WACI,OAAO1E,IAAIC,WAAWC,MAAM,oDAAsDtB,KAAK6F,SAAW,OAAS,gB,EAG/GE,QAAA,WAAU,WACN,OAAOrI,EAAE,cAAe,CACpB0D,IAAI2C,MAAMC,UAAU,0CAA4CtG,EAAE,cAAe,CAC7EA,EAAE,QAAS0D,IAAIC,WAAWC,MAAM,mDAChC5D,EAAE,4BAA6B,CAC3BsC,KAAKsC,KAAOrB,IAAOC,UAAU,CACzBC,KAAM,eACN6E,QAAS,WACL,EAAK1D,KAAO,KACZ,EAAKoC,WAAWuB,cAAgB,CAC5B3D,KAAM,IAEV,EAAKqC,OAAQ,GAEjB5D,UAAW,sDACV,KAELmF,IAAOlG,KAAKsC,MAEZ6D,IAASnG,KAAKsC,QAElBP,EAAWb,UAAU,CACjBoC,MAAOtD,KAAK6E,gBACZpC,SAAU,SAACH,GACP,EAAKA,KAAOA,EACZ,EAAKoC,WAAWuB,cAAgB,CAC5B3D,QAEJ,EAAKqC,OAAQ,EAEbjH,EAAEiG,cAGT,KACLvC,IAAI2C,MAAMC,UAAU,0CAA4C,CAC5DtG,EAAE,cAAe,CACbA,EAAE,QAAS0D,IAAIC,WAAWC,MAAM,yDAChC5D,EAAE,mDAAoD,CAClDa,MAAOyB,KAAKsE,UACZ8B,SAAU,SAACtD,GAEP,IAAOvE,EAASuE,EAAMnD,OAAfpB,MAEP,EAAK+F,UAAY/F,EACjB,EAAKmG,WAAWJ,UAAY/F,EAC5B,EAAKoG,OAAQ,GAEjB0B,SAAUrG,KAAK4E,YAGvB5E,KAAK6F,SAAWnI,EAAE,cAAe,CAC7BA,EAAE,QAAS0D,IAAIC,WAAWC,MAAM,wDAChC5D,EAAE,yCAA0C,CACxCa,MAAOyB,KAAKuE,SACZ6B,SAAU,SAACtD,GAEP,IAAOvE,EAASuE,EAAMnD,OAAfpB,MAEP,EAAKgG,SAAWhG,EAChB,EAAKmG,WAAWH,SAAWhG,EAC3B,EAAKoG,OAAQ,GAEjB0B,SAAUrG,KAAK4E,YAElB,MACL,KACJ5E,KAAKqF,oBAAsB3H,EAAE,cAAe,CACxC4I,IAAOpF,UAAU,CACboC,MAAOtD,KAAKwE,cACZ4B,SAAU,SAAC7H,GACP,EAAKiG,cAAgBjG,EACrB,EAAKoG,OAAQ,EAKTpG,IACA,EAAKmG,WAAWuB,cAAgB,CAC5B3D,KAAM,EAAKA,MAAQ,IAGvB,EAAKoC,WAAWJ,UAAY,EAAKA,YAIzC+B,SAAUrG,KAAK4E,UAAY5E,KAAKyE,4BACjCrD,IAAIC,WAAWC,MAAM,wDAA0DtB,KAAK6F,SAAW,aAAe,UACjH7F,KAAKyE,2BAA6B,KAAO/G,EAAE,YAAa0D,IAAIC,WAAWC,MAAM,gEAC5E,KACL5D,EAAE,cAAe,CACbuD,IAAOC,UAAU,CACbmF,UAAWrG,KAAK2E,MAChBC,QAAS5E,KAAK4E,QACd2B,KAAM,SACNxF,UAAW,0BACZK,IAAIC,WAAWC,MAAM,qDACxBL,IAAOC,UAAU,CACbH,UAAW,sBACXiF,QAFa,WAGT5E,IAAIoF,MAAMC,UAEfrF,IAAIC,WAAWC,MAAM,0D,EAKpCoF,UAAA,SAAUC,GACN,OAAOA,EAAMC,KAAN,KAEA5G,KAAK0E,c,EAKhBjC,SAAA,SAASoE,GAAG,WACRA,EAAE5D,iBAEFjD,KAAK4E,SAAU,EAEf5E,KAAK0G,UAAU1G,KAAKc,MAAMiE,SAAS+B,MAAK,WACpC,OAAI,EAAKtC,eAAiB,EAAKC,2BACpB,EAAKiC,UAAU,EAAKjC,4BAGxBsC,QAAQC,aAChBF,MAAK,WACJ,EAAKlC,SAAU,EACf,EAAKD,OAAQ,EAEbjH,EAAEiG,SAEFvC,IAAIoF,MAAMC,WAZd,OAaS,SAAAQ,GAGL,MAFA,EAAKrC,SAAU,EACflH,EAAEiG,SACIsD,M,GA3M6BC,KCT/C9F,IAAI+F,aAAalD,IAAI,iCAAiC,WAClDmD,iBAAOC,IAAoB,sBAAsB,SAAUxD,EAAiB+B,IACnExE,IAAI2C,MAAMC,UAAU,2CAA8C5C,IAAI2C,MAAMC,UAAU,4CAI3FH,EAAMI,IAAI,gCAAiChD,IAAOC,UAAU,CACxDC,KAAM,mBACN6E,QAFwD,WAGpD5E,IAAIoF,MAAMc,KAAKjD,EAAmB,CAC9BU,QAASa,MAGlBxE,IAAIC,WAAWC,MAAM,0DAG5B8F,iBAAOG,IAAc,sBAAsB,SAAU1D,EAAiB6B,IAC7DtE,IAAI2C,MAAMC,UAAU,2CAA8C5C,IAAI2C,MAAMC,UAAU,4CAI3FH,EAAMI,IAAI,gCAAiChD,IAAOC,UAAU,CACxDC,KAAM,mBACN6E,QAFwD,WAGpD5E,IAAIoF,MAAMc,KAAKjD,EAAmB,CAC9BU,QAASW,MAGlBtE,IAAIC,WAAWC,MAAM","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/models/Discussion'];","module.exports = flarum.core.compat['common/models/Post'];","module.exports = flarum.core.compat['forum/utils/DiscussionControls'];","module.exports = flarum.core.compat['forum/utils/PostControls'];","module.exports = flarum.core.compat['common/components/Modal'];","module.exports = flarum.core.compat['common/helpers/avatar'];","module.exports = flarum.core.compat['common/helpers/username'];","module.exports = flarum.core.compat['forum/states/SearchState'];","module.exports = flarum.core.compat['common/components/Switch'];","module.exports = flarum.core.compat['forum/components/Search'];","module.exports = flarum.core.compat['common/utils/ItemList'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['forum/components/UsersSearchSource'];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import * as Mithril from 'mithril';\nimport app from 'flarum/forum/app';\nimport UsersSearchSource from 'flarum/forum/components/UsersSearchSource';\nimport Button from 'flarum/common/components/Button';\n\nexport default class UsersSearchSourceWithoutInternalRouting extends UsersSearchSource {\n    view(query: string): Array<Mithril.Vnode> {\n        const view = super.view(query);\n\n        // We want to keep only the result <li>s, and not any header or stuff injected by another extension\n        // In core:\n        // view[0] is the header\n        // view[1+] are the results\n        // When fof/user-directory is installed, view[1] is the link to the user directory page\n        const resultItems = view.filter(entry => {\n            return entry.attrs && entry.attrs.className && entry.attrs.className.indexOf('UserSearchResult') !== -1;\n        });\n\n        if (resultItems.length === 0) {\n            if (query.length < 3) {\n                return [\n                    m('li', Button.component({\n                        icon: 'fas fa-info-circle',\n                    }, app.translator.trans('clarkwinkelmann-author-change.forum.search.type-more'))),\n                ];\n            }\n\n            return [\n                m('li', Button.component({\n                    icon: 'fas fa-search-minus',\n                }, app.translator.trans('clarkwinkelmann-author-change.forum.search.no-results'))),\n            ];\n        }\n\n        resultItems.forEach((result: any) => {\n            if (Array.isArray(result.children) && result.children.length > 0) {\n                // We use a normal link instead of Mithril's Link so that we can cancel navigation\n                // with preventDefault() in UserSearch component\n                result.children[0].tag = 'a';\n            }\n        });\n\n        if (query.length < 3) {\n            resultItems.push(m('li', Button.component({\n                icon: 'fas fa-info-circle',\n            }, app.translator.trans('clarkwinkelmann-author-change.forum.search.type-more'))));\n        }\n\n        return resultItems;\n    }\n}\n","import * as Mithril from 'mithril';\nimport app from 'flarum/forum/app';\nimport Search, {SearchAttrs} from 'flarum/forum/components/Search';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport extractText from 'flarum/common/utils/extractText';\nimport UsersSearchSourceWithoutInternalRouting from './UsersSearchSourceWithoutInternalRouting';\nimport User from \"flarum/common/models/User\";\n\ninterface UserSearchAttrs extends SearchAttrs {\n    onsubmit: (user: User) => void\n}\n\nexport default class UserSearch extends Search<UserSearchAttrs> {\n    selectUserElement(searchResultElement: HTMLElement) {\n        const index = searchResultElement.dataset.index;\n\n        if (!index) {\n            return;\n        }\n\n        // The \"index\" data attribute is the string \"user\" concatenated with the user ID\n        const userId = index.split('users')[1];\n\n        const user = app.store.getById('users', userId);\n\n        this.attrs.onsubmit(user);\n    }\n\n    oncreate(vnode: Mithril.Vnode<UserSearchAttrs, this>) {\n        super.oncreate(vnode);\n\n        this.$('.Search-results').on('click', event => {\n            const $userSearchResult = $(event.target).parents('.UserSearchResult');\n\n            if ($userSearchResult.length) {\n                event.preventDefault();\n\n                this.selectUserElement($userSearchResult.get(0));\n            }\n        });\n    }\n\n    selectResult() {\n        clearTimeout(this.searchTimeout);\n        this.loadingSources = 0;\n\n        if (this.state.getValue()) {\n            this.selectUserElement(this.getItem(this.index).get(0));\n        } else {\n            this.clear();\n        }\n\n        this.$('input').trigger('blur');\n    }\n\n    clear() {\n        super.clear();\n\n        m.redraw();\n    }\n\n    sourceItems(): ItemList {\n        const items = new ItemList();\n\n        if (app.forum.attribute('canSearchUsers')) items.add('users', new UsersSearchSourceWithoutInternalRouting());\n\n        return items;\n    }\n\n    view() {\n        const view = super.view() as any;\n\n        // view = .Search, [] = .Search-input, [][] = input.FormControl\n        view.children[0].children[0].attrs.placeholder = extractText(app.translator.trans('clarkwinkelmann-author-change.forum.search.placeholder'));\n\n        return view;\n    }\n}\n","import * as Mithril from 'mithril';\nimport app from 'flarum/forum/app';\nimport {ComponentAttrs} from 'flarum/common/Component';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Post from 'flarum/common/models/Post';\nimport User from 'flarum/common/models/User';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\nimport SearchState from 'flarum/forum/states/SearchState';\nimport Switch from 'flarum/common/components/Switch';\nimport UserSearch from './UserSearch';\n\ninterface UpdateAuthorModalAttrs extends ComponentAttrs {\n    related: Discussion | Post\n}\n\n// @ts-ignore TODO wrong Modal.view typings\nexport default class UpdateAuthorModal extends Modal {\n    attrs!: UpdateAuthorModalAttrs\n    user!: User | null | false\n    createdAt!: string\n    editedAt!: string\n    syncFirstPost: boolean = false\n    otherModelForFirstPostSync: Discussion | Post | false = false\n    attributes: any = {}; // What we will send to the server. We only send what changed\n    dirty: boolean = false\n    loading: boolean = false\n    userSearchState!: SearchState\n\n    oninit(vnode: Mithril.Vnode<UpdateAuthorModalAttrs, this>) {\n        super.oninit(vnode);\n\n        const {related} = this.attrs;\n\n        const editedAt = related instanceof Post && related.editedAt();\n\n        this.user = related.user();\n        this.createdAt = related.createdAt().toISOString().slice(0, 16);\n        this.editedAt = editedAt ? editedAt.toISOString().slice(0, 16) : '';\n        this.userSearchState = new SearchState();\n\n        // Workaround for https://github.com/flarum/core/issues/2399\n        this.userSearchState.getInitialSearch = () => '';\n\n        if (this.showFirstPostSync()) {\n            if (related instanceof Discussion) {\n                this.otherModelForFirstPostSync = related.firstPost();\n\n                // The firstPost relationship will not be loaded if the discussion is accessed directly\n                // we will try to find the first post in the store\n                if (this.otherModelForFirstPostSync === false) {\n                    this.otherModelForFirstPostSync = app.store.all('posts').find(post => {\n                        return post.number() === 1 && post.discussion() === related;\n                    }) || false;\n                }\n            } else {\n                this.otherModelForFirstPostSync = related.discussion();\n            }\n\n            if (\n                this.otherModelForFirstPostSync &&\n                this.otherModelForFirstPostSync.user() === this.user &&\n                this.otherModelForFirstPostSync.createdAt().toISOString().slice(0, 16) === this.createdAt\n            ) {\n                this.syncFirstPost = true;\n            }\n        }\n    }\n\n    showFirstPostSync(): boolean {\n        return (this.attrs.related instanceof Discussion) || this.attrs.related.number() === 1;\n    }\n\n    isPost(): boolean {\n        return this.attrs.related instanceof Post;\n    }\n\n    className() {\n        return 'Update-Author-Modal';\n    }\n\n    title() {\n        return app.translator.trans('clarkwinkelmann-author-change.forum.modal.title-' + (this.isPost() ? 'post' : 'discussion'));\n    }\n\n    content() {\n        return m('.Modal-body', [\n            app.forum.attribute('clarkwinkelmannAuthorChangeCanEditUser') ? m('.Form-group', [\n                m('label', app.translator.trans('clarkwinkelmann-author-change.forum.modal.user')),\n                m('.FormControl.SelectedUser', [\n                    this.user ? Button.component({\n                        icon: 'fas fa-times',\n                        onclick: () => {\n                            this.user = null;\n                            this.attributes.relationships = {\n                                user: [], // https://github.com/flarum/core/issues/2876\n                            };\n                            this.dirty = true;\n                        },\n                        className: 'Button Button--icon Button--link RemoveUserButton',\n                    }) : null,\n                    // @ts-ignore TODO wrong avatar typings\n                    avatar(this.user),\n                    // @ts-ignore TODO wrong username typings\n                    username(this.user),\n                ]),\n                UserSearch.component({\n                    state: this.userSearchState,\n                    onsubmit: (user: User) => {\n                        this.user = user;\n                        this.attributes.relationships = {\n                            user,\n                        };\n                        this.dirty = true;\n\n                        m.redraw();\n                    },\n                }),\n            ]) : null,\n            app.forum.attribute('clarkwinkelmannAuthorChangeCanEditDate') ? [\n                m('.Form-group', [\n                    m('label', app.translator.trans('clarkwinkelmann-author-change.forum.modal.created_at')),\n                    m('input[type=datetime-local][required].FormControl', {\n                        value: this.createdAt,\n                        onchange: (event: Event) => {\n                            // @ts-ignore we know target has a value\n                            const {value} = event.target;\n\n                            this.createdAt = value;\n                            this.attributes.createdAt = value;\n                            this.dirty = true;\n                        },\n                        disabled: this.loading,\n                    }),\n                ]),\n                this.isPost() ? m('.Form-group', [\n                    m('label', app.translator.trans('clarkwinkelmann-author-change.forum.modal.edited_at')),\n                    m('input[type=datetime-local].FormControl', {\n                        value: this.editedAt,\n                        onchange: (event: Event) => {\n                            // @ts-ignore we know target has a value\n                            const {value} = event.target;\n\n                            this.editedAt = value;\n                            this.attributes.editedAt = value;\n                            this.dirty = true;\n                        },\n                        disabled: this.loading,\n                    }),\n                ]) : null,\n            ] : null,\n            this.showFirstPostSync() ? m('.Form-group', [\n                Switch.component({\n                    state: this.syncFirstPost,\n                    onchange: (value: boolean) => {\n                        this.syncFirstPost = value;\n                        this.dirty = true;\n\n                        // We only put the values inside attributes when they change\n                        // but when switching the sync checkbox to true we want to force a sync of both attributes that\n                        // are on discussion+post\n                        if (value) {\n                            this.attributes.relationships = {\n                                user: this.user || [],\n                            };\n\n                            this.attributes.createdAt = this.createdAt;\n                        }\n                    },\n                    // Disable checkbox if other model isn't available since we won't have the ID to save it\n                    disabled: this.loading || !this.otherModelForFirstPostSync,\n                }, app.translator.trans('clarkwinkelmann-author-change.forum.modal.sync-with-' + (this.isPost() ? 'discussion' : 'post'))),\n                this.otherModelForFirstPostSync ? null : m('.helpText', app.translator.trans('clarkwinkelmann-author-change.forum.modal.sync-impossible'))\n            ]) : null,\n            m('.Form-group', [\n                Button.component({\n                    disabled: !this.dirty,\n                    loading: this.loading,\n                    type: 'submit',\n                    className: 'Button Button--primary',\n                }, app.translator.trans('clarkwinkelmann-author-change.forum.modal.submit')),\n                Button.component({\n                    className: 'Button CancelButton',\n                    onclick() {\n                        app.modal.close();\n                    },\n                }, app.translator.trans('clarkwinkelmann-author-change.forum.modal.cancel')),\n            ]),\n        ]);\n    }\n\n    saveModel(model: Discussion | Post) {\n        return model.save({\n            // Clone this.attributes so Model.save doesn't delete the relationships key\n            ...this.attributes,\n        });\n    }\n\n    // @ts-ignore TODO wrong Modal.onsubmit typings\n    onsubmit(e) {\n        e.preventDefault();\n\n        this.loading = true;\n\n        this.saveModel(this.attrs.related).then(() => {\n            if (this.syncFirstPost && this.otherModelForFirstPostSync) {\n                return this.saveModel(this.otherModelForFirstPostSync);\n            }\n\n            return Promise.resolve();\n        }).then(() => {\n            this.loading = false;\n            this.dirty = false;\n\n            m.redraw();\n\n            app.modal.close();\n        }).catch(err => {\n            this.loading = false;\n            m.redraw();\n            throw err;\n        });\n    }\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport PostControls from 'flarum/forum/utils/PostControls';\nimport Button from 'flarum/common/components/Button';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Post from 'flarum/common/models/Post';\nimport UpdateAuthorModal from './components/UpdateAuthorModal';\n\napp.initializers.add('clarkwinkelmann-author-change', () => {\n    extend(DiscussionControls, 'moderationControls', function (items: ItemList, discussion: Discussion) {\n        if (!app.forum.attribute('clarkwinkelmannAuthorChangeCanEditUser') && !app.forum.attribute('clarkwinkelmannAuthorChangeCanEditDate')) {\n            return;\n        }\n\n        items.add('clarkwinkelmann-author-change', Button.component({\n            icon: 'fas fa-user-edit',\n            onclick() {\n                app.modal.show(UpdateAuthorModal, {\n                    related: discussion,\n                });\n            },\n        }, app.translator.trans('clarkwinkelmann-author-change.forum.controls.edit')));\n    });\n\n    extend(PostControls, 'moderationControls', function (items: ItemList, post: Post) {\n        if (!app.forum.attribute('clarkwinkelmannAuthorChangeCanEditUser') && !app.forum.attribute('clarkwinkelmannAuthorChangeCanEditDate')) {\n            return;\n        }\n\n        items.add('clarkwinkelmann-author-change', Button.component({\n            icon: 'fas fa-user-edit',\n            onclick() {\n                app.modal.show(UpdateAuthorModal, {\n                    related: post,\n                });\n            },\n        }, app.translator.trans('clarkwinkelmann-author-change.forum.controls.edit')));\n    });\n});\n"],"sourceRoot":""}